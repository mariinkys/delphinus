# GitHub Actions Workflow for Manual Docker Image Build and Push
# This workflow builds and pushes a Docker image to GitHub Container Registry (ghcr.io)
# when manually triggered from the Actions tab

name: Manual Build and Push Docker Image

on:
  # Trigger manually via GitHub Actions UI
  workflow_dispatch:
    inputs:
      custom_tag:
        description: "Custom tag for the Docker image (e.g. test, dev, my-feature)"
        required: true
        default: "manual-test"

env:
  REGISTRY: ghcr.io
  # This will be: ghcr.io/username/repo-name (automatically lowercased)
  IMAGE_NAME: ${{ github.repository }}

jobs:
  manual-build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.custom_tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Display pushed tags
        run: |
          echo "Successfully pushed image with tags:"
          echo "${{ steps.meta.outputs.tags }}"

      - name: Delete untagged images
        uses: actions/delete-package-versions@v5
        continue-on-error: true
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: 'container'
          min-versions-to-keep: 0
          delete-only-untagged-versions: 'true'
